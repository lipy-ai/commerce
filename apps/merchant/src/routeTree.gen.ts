/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DemoRouteImport } from './routes/demo/route'
import { Route as loggedInRouteImport } from './routes/(loggedIn)/route'
import { Route as DemoIndexImport } from './routes/demo/index'
import { Route as loggedInIndexImport } from './routes/(loggedIn)/index'
import { Route as DemoTanstackMutationImport } from './routes/demo/tanstackMutation'
import { Route as DemoSsrImport } from './routes/demo/ssr'
import { Route as DemoDirectMutationImport } from './routes/demo/directMutation'
import { Route as DemoClientImport } from './routes/demo/client'
import { Route as loggedInStoreRouteImport } from './routes/(loggedIn)/store/route'
import { Route as loggedInAccountRouteImport } from './routes/(loggedIn)/account/route'
import { Route as loggedInStoreIndexImport } from './routes/(loggedIn)/store/index'
import { Route as loggedInProductIndexImport } from './routes/(loggedIn)/product/index'
import { Route as loggedInOrderIndexImport } from './routes/(loggedIn)/order/index'
import { Route as loggedInCustomerIndexImport } from './routes/(loggedIn)/customer/index'
import { Route as loggedInAccountIndexImport } from './routes/(loggedIn)/account/index'
import { Route as loggedInStoreStaffImport } from './routes/(loggedIn)/store/staff'
import { Route as loggedInProductCreateImport } from './routes/(loggedIn)/product/create'
import { Route as loggedInProductIdImport } from './routes/(loggedIn)/product/$id'
import { Route as loggedInOrderIdImport } from './routes/(loggedIn)/order/$id'
import { Route as loggedInCustomerIdImport } from './routes/(loggedIn)/customer/$id'
import { Route as loggedInAccountSupportImport } from './routes/(loggedIn)/account/support'
import { Route as loggedInAccountReferralImport } from './routes/(loggedIn)/account/referral'
import { Route as loggedInAccountProfileImport } from './routes/(loggedIn)/account/profile'
import { Route as loggedInAccountPreferencesImport } from './routes/(loggedIn)/account/preferences'

// Create/Update Routes

const DemoRouteRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRoute,
} as any)

const loggedInRouteRoute = loggedInRouteImport.update({
  id: '/(loggedIn)',
  getParentRoute: () => rootRoute,
} as any)

const DemoIndexRoute = DemoIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DemoRouteRoute,
} as any)

const loggedInIndexRoute = loggedInIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const DemoTanstackMutationRoute = DemoTanstackMutationImport.update({
  id: '/tanstackMutation',
  path: '/tanstackMutation',
  getParentRoute: () => DemoRouteRoute,
} as any)

const DemoSsrRoute = DemoSsrImport.update({
  id: '/ssr',
  path: '/ssr',
  getParentRoute: () => DemoRouteRoute,
} as any)

const DemoDirectMutationRoute = DemoDirectMutationImport.update({
  id: '/directMutation',
  path: '/directMutation',
  getParentRoute: () => DemoRouteRoute,
} as any)

const DemoClientRoute = DemoClientImport.update({
  id: '/client',
  path: '/client',
  getParentRoute: () => DemoRouteRoute,
} as any)

const loggedInStoreRouteRoute = loggedInStoreRouteImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInAccountRouteRoute = loggedInAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInStoreIndexRoute = loggedInStoreIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => loggedInStoreRouteRoute,
} as any)

const loggedInProductIndexRoute = loggedInProductIndexImport.update({
  id: '/product/',
  path: '/product/',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInOrderIndexRoute = loggedInOrderIndexImport.update({
  id: '/order/',
  path: '/order/',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInCustomerIndexRoute = loggedInCustomerIndexImport.update({
  id: '/customer/',
  path: '/customer/',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInAccountIndexRoute = loggedInAccountIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => loggedInAccountRouteRoute,
} as any)

const loggedInStoreStaffRoute = loggedInStoreStaffImport.update({
  id: '/staff',
  path: '/staff',
  getParentRoute: () => loggedInStoreRouteRoute,
} as any)

const loggedInProductCreateRoute = loggedInProductCreateImport.update({
  id: '/product/create',
  path: '/product/create',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInProductIdRoute = loggedInProductIdImport.update({
  id: '/product/$id',
  path: '/product/$id',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInOrderIdRoute = loggedInOrderIdImport.update({
  id: '/order/$id',
  path: '/order/$id',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInCustomerIdRoute = loggedInCustomerIdImport.update({
  id: '/customer/$id',
  path: '/customer/$id',
  getParentRoute: () => loggedInRouteRoute,
} as any)

const loggedInAccountSupportRoute = loggedInAccountSupportImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => loggedInAccountRouteRoute,
} as any)

const loggedInAccountReferralRoute = loggedInAccountReferralImport.update({
  id: '/referral',
  path: '/referral',
  getParentRoute: () => loggedInAccountRouteRoute,
} as any)

const loggedInAccountProfileRoute = loggedInAccountProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => loggedInAccountRouteRoute,
} as any)

const loggedInAccountPreferencesRoute = loggedInAccountPreferencesImport.update(
  {
    id: '/preferences',
    path: '/preferences',
    getParentRoute: () => loggedInAccountRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(loggedIn)': {
      id: '/(loggedIn)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof loggedInRouteImport
      parentRoute: typeof rootRoute
    }
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoRouteImport
      parentRoute: typeof rootRoute
    }
    '/(loggedIn)/account': {
      id: '/(loggedIn)/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof loggedInAccountRouteImport
      parentRoute: typeof loggedInRouteImport
    }
    '/(loggedIn)/store': {
      id: '/(loggedIn)/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof loggedInStoreRouteImport
      parentRoute: typeof loggedInRouteImport
    }
    '/demo/client': {
      id: '/demo/client'
      path: '/client'
      fullPath: '/demo/client'
      preLoaderRoute: typeof DemoClientImport
      parentRoute: typeof DemoRouteImport
    }
    '/demo/directMutation': {
      id: '/demo/directMutation'
      path: '/directMutation'
      fullPath: '/demo/directMutation'
      preLoaderRoute: typeof DemoDirectMutationImport
      parentRoute: typeof DemoRouteImport
    }
    '/demo/ssr': {
      id: '/demo/ssr'
      path: '/ssr'
      fullPath: '/demo/ssr'
      preLoaderRoute: typeof DemoSsrImport
      parentRoute: typeof DemoRouteImport
    }
    '/demo/tanstackMutation': {
      id: '/demo/tanstackMutation'
      path: '/tanstackMutation'
      fullPath: '/demo/tanstackMutation'
      preLoaderRoute: typeof DemoTanstackMutationImport
      parentRoute: typeof DemoRouteImport
    }
    '/(loggedIn)/': {
      id: '/(loggedIn)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof loggedInIndexImport
      parentRoute: typeof loggedInRouteImport
    }
    '/demo/': {
      id: '/demo/'
      path: '/'
      fullPath: '/demo/'
      preLoaderRoute: typeof DemoIndexImport
      parentRoute: typeof DemoRouteImport
    }
    '/(loggedIn)/account/preferences': {
      id: '/(loggedIn)/account/preferences'
      path: '/preferences'
      fullPath: '/account/preferences'
      preLoaderRoute: typeof loggedInAccountPreferencesImport
      parentRoute: typeof loggedInAccountRouteImport
    }
    '/(loggedIn)/account/profile': {
      id: '/(loggedIn)/account/profile'
      path: '/profile'
      fullPath: '/account/profile'
      preLoaderRoute: typeof loggedInAccountProfileImport
      parentRoute: typeof loggedInAccountRouteImport
    }
    '/(loggedIn)/account/referral': {
      id: '/(loggedIn)/account/referral'
      path: '/referral'
      fullPath: '/account/referral'
      preLoaderRoute: typeof loggedInAccountReferralImport
      parentRoute: typeof loggedInAccountRouteImport
    }
    '/(loggedIn)/account/support': {
      id: '/(loggedIn)/account/support'
      path: '/support'
      fullPath: '/account/support'
      preLoaderRoute: typeof loggedInAccountSupportImport
      parentRoute: typeof loggedInAccountRouteImport
    }
    '/(loggedIn)/customer/$id': {
      id: '/(loggedIn)/customer/$id'
      path: '/customer/$id'
      fullPath: '/customer/$id'
      preLoaderRoute: typeof loggedInCustomerIdImport
      parentRoute: typeof loggedInRouteImport
    }
    '/(loggedIn)/order/$id': {
      id: '/(loggedIn)/order/$id'
      path: '/order/$id'
      fullPath: '/order/$id'
      preLoaderRoute: typeof loggedInOrderIdImport
      parentRoute: typeof loggedInRouteImport
    }
    '/(loggedIn)/product/$id': {
      id: '/(loggedIn)/product/$id'
      path: '/product/$id'
      fullPath: '/product/$id'
      preLoaderRoute: typeof loggedInProductIdImport
      parentRoute: typeof loggedInRouteImport
    }
    '/(loggedIn)/product/create': {
      id: '/(loggedIn)/product/create'
      path: '/product/create'
      fullPath: '/product/create'
      preLoaderRoute: typeof loggedInProductCreateImport
      parentRoute: typeof loggedInRouteImport
    }
    '/(loggedIn)/store/staff': {
      id: '/(loggedIn)/store/staff'
      path: '/staff'
      fullPath: '/store/staff'
      preLoaderRoute: typeof loggedInStoreStaffImport
      parentRoute: typeof loggedInStoreRouteImport
    }
    '/(loggedIn)/account/': {
      id: '/(loggedIn)/account/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof loggedInAccountIndexImport
      parentRoute: typeof loggedInAccountRouteImport
    }
    '/(loggedIn)/customer/': {
      id: '/(loggedIn)/customer/'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof loggedInCustomerIndexImport
      parentRoute: typeof loggedInRouteImport
    }
    '/(loggedIn)/order/': {
      id: '/(loggedIn)/order/'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof loggedInOrderIndexImport
      parentRoute: typeof loggedInRouteImport
    }
    '/(loggedIn)/product/': {
      id: '/(loggedIn)/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof loggedInProductIndexImport
      parentRoute: typeof loggedInRouteImport
    }
    '/(loggedIn)/store/': {
      id: '/(loggedIn)/store/'
      path: '/'
      fullPath: '/store/'
      preLoaderRoute: typeof loggedInStoreIndexImport
      parentRoute: typeof loggedInStoreRouteImport
    }
  }
}

// Create and export the route tree

interface loggedInAccountRouteRouteChildren {
  loggedInAccountPreferencesRoute: typeof loggedInAccountPreferencesRoute
  loggedInAccountProfileRoute: typeof loggedInAccountProfileRoute
  loggedInAccountReferralRoute: typeof loggedInAccountReferralRoute
  loggedInAccountSupportRoute: typeof loggedInAccountSupportRoute
  loggedInAccountIndexRoute: typeof loggedInAccountIndexRoute
}

const loggedInAccountRouteRouteChildren: loggedInAccountRouteRouteChildren = {
  loggedInAccountPreferencesRoute: loggedInAccountPreferencesRoute,
  loggedInAccountProfileRoute: loggedInAccountProfileRoute,
  loggedInAccountReferralRoute: loggedInAccountReferralRoute,
  loggedInAccountSupportRoute: loggedInAccountSupportRoute,
  loggedInAccountIndexRoute: loggedInAccountIndexRoute,
}

const loggedInAccountRouteRouteWithChildren =
  loggedInAccountRouteRoute._addFileChildren(loggedInAccountRouteRouteChildren)

interface loggedInStoreRouteRouteChildren {
  loggedInStoreStaffRoute: typeof loggedInStoreStaffRoute
  loggedInStoreIndexRoute: typeof loggedInStoreIndexRoute
}

const loggedInStoreRouteRouteChildren: loggedInStoreRouteRouteChildren = {
  loggedInStoreStaffRoute: loggedInStoreStaffRoute,
  loggedInStoreIndexRoute: loggedInStoreIndexRoute,
}

const loggedInStoreRouteRouteWithChildren =
  loggedInStoreRouteRoute._addFileChildren(loggedInStoreRouteRouteChildren)

interface loggedInRouteRouteChildren {
  loggedInAccountRouteRoute: typeof loggedInAccountRouteRouteWithChildren
  loggedInStoreRouteRoute: typeof loggedInStoreRouteRouteWithChildren
  loggedInIndexRoute: typeof loggedInIndexRoute
  loggedInCustomerIdRoute: typeof loggedInCustomerIdRoute
  loggedInOrderIdRoute: typeof loggedInOrderIdRoute
  loggedInProductIdRoute: typeof loggedInProductIdRoute
  loggedInProductCreateRoute: typeof loggedInProductCreateRoute
  loggedInCustomerIndexRoute: typeof loggedInCustomerIndexRoute
  loggedInOrderIndexRoute: typeof loggedInOrderIndexRoute
  loggedInProductIndexRoute: typeof loggedInProductIndexRoute
}

const loggedInRouteRouteChildren: loggedInRouteRouteChildren = {
  loggedInAccountRouteRoute: loggedInAccountRouteRouteWithChildren,
  loggedInStoreRouteRoute: loggedInStoreRouteRouteWithChildren,
  loggedInIndexRoute: loggedInIndexRoute,
  loggedInCustomerIdRoute: loggedInCustomerIdRoute,
  loggedInOrderIdRoute: loggedInOrderIdRoute,
  loggedInProductIdRoute: loggedInProductIdRoute,
  loggedInProductCreateRoute: loggedInProductCreateRoute,
  loggedInCustomerIndexRoute: loggedInCustomerIndexRoute,
  loggedInOrderIndexRoute: loggedInOrderIndexRoute,
  loggedInProductIndexRoute: loggedInProductIndexRoute,
}

const loggedInRouteRouteWithChildren = loggedInRouteRoute._addFileChildren(
  loggedInRouteRouteChildren,
)

interface DemoRouteRouteChildren {
  DemoClientRoute: typeof DemoClientRoute
  DemoDirectMutationRoute: typeof DemoDirectMutationRoute
  DemoSsrRoute: typeof DemoSsrRoute
  DemoTanstackMutationRoute: typeof DemoTanstackMutationRoute
  DemoIndexRoute: typeof DemoIndexRoute
}

const DemoRouteRouteChildren: DemoRouteRouteChildren = {
  DemoClientRoute: DemoClientRoute,
  DemoDirectMutationRoute: DemoDirectMutationRoute,
  DemoSsrRoute: DemoSsrRoute,
  DemoTanstackMutationRoute: DemoTanstackMutationRoute,
  DemoIndexRoute: DemoIndexRoute,
}

const DemoRouteRouteWithChildren = DemoRouteRoute._addFileChildren(
  DemoRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof loggedInIndexRoute
  '/demo': typeof DemoRouteRouteWithChildren
  '/account': typeof loggedInAccountRouteRouteWithChildren
  '/store': typeof loggedInStoreRouteRouteWithChildren
  '/demo/client': typeof DemoClientRoute
  '/demo/directMutation': typeof DemoDirectMutationRoute
  '/demo/ssr': typeof DemoSsrRoute
  '/demo/tanstackMutation': typeof DemoTanstackMutationRoute
  '/demo/': typeof DemoIndexRoute
  '/account/preferences': typeof loggedInAccountPreferencesRoute
  '/account/profile': typeof loggedInAccountProfileRoute
  '/account/referral': typeof loggedInAccountReferralRoute
  '/account/support': typeof loggedInAccountSupportRoute
  '/customer/$id': typeof loggedInCustomerIdRoute
  '/order/$id': typeof loggedInOrderIdRoute
  '/product/$id': typeof loggedInProductIdRoute
  '/product/create': typeof loggedInProductCreateRoute
  '/store/staff': typeof loggedInStoreStaffRoute
  '/account/': typeof loggedInAccountIndexRoute
  '/customer': typeof loggedInCustomerIndexRoute
  '/order': typeof loggedInOrderIndexRoute
  '/product': typeof loggedInProductIndexRoute
  '/store/': typeof loggedInStoreIndexRoute
}

export interface FileRoutesByTo {
  '/demo/client': typeof DemoClientRoute
  '/demo/directMutation': typeof DemoDirectMutationRoute
  '/demo/ssr': typeof DemoSsrRoute
  '/demo/tanstackMutation': typeof DemoTanstackMutationRoute
  '/': typeof loggedInIndexRoute
  '/demo': typeof DemoIndexRoute
  '/account/preferences': typeof loggedInAccountPreferencesRoute
  '/account/profile': typeof loggedInAccountProfileRoute
  '/account/referral': typeof loggedInAccountReferralRoute
  '/account/support': typeof loggedInAccountSupportRoute
  '/customer/$id': typeof loggedInCustomerIdRoute
  '/order/$id': typeof loggedInOrderIdRoute
  '/product/$id': typeof loggedInProductIdRoute
  '/product/create': typeof loggedInProductCreateRoute
  '/store/staff': typeof loggedInStoreStaffRoute
  '/account': typeof loggedInAccountIndexRoute
  '/customer': typeof loggedInCustomerIndexRoute
  '/order': typeof loggedInOrderIndexRoute
  '/product': typeof loggedInProductIndexRoute
  '/store': typeof loggedInStoreIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(loggedIn)': typeof loggedInRouteRouteWithChildren
  '/demo': typeof DemoRouteRouteWithChildren
  '/(loggedIn)/account': typeof loggedInAccountRouteRouteWithChildren
  '/(loggedIn)/store': typeof loggedInStoreRouteRouteWithChildren
  '/demo/client': typeof DemoClientRoute
  '/demo/directMutation': typeof DemoDirectMutationRoute
  '/demo/ssr': typeof DemoSsrRoute
  '/demo/tanstackMutation': typeof DemoTanstackMutationRoute
  '/(loggedIn)/': typeof loggedInIndexRoute
  '/demo/': typeof DemoIndexRoute
  '/(loggedIn)/account/preferences': typeof loggedInAccountPreferencesRoute
  '/(loggedIn)/account/profile': typeof loggedInAccountProfileRoute
  '/(loggedIn)/account/referral': typeof loggedInAccountReferralRoute
  '/(loggedIn)/account/support': typeof loggedInAccountSupportRoute
  '/(loggedIn)/customer/$id': typeof loggedInCustomerIdRoute
  '/(loggedIn)/order/$id': typeof loggedInOrderIdRoute
  '/(loggedIn)/product/$id': typeof loggedInProductIdRoute
  '/(loggedIn)/product/create': typeof loggedInProductCreateRoute
  '/(loggedIn)/store/staff': typeof loggedInStoreStaffRoute
  '/(loggedIn)/account/': typeof loggedInAccountIndexRoute
  '/(loggedIn)/customer/': typeof loggedInCustomerIndexRoute
  '/(loggedIn)/order/': typeof loggedInOrderIndexRoute
  '/(loggedIn)/product/': typeof loggedInProductIndexRoute
  '/(loggedIn)/store/': typeof loggedInStoreIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo'
    | '/account'
    | '/store'
    | '/demo/client'
    | '/demo/directMutation'
    | '/demo/ssr'
    | '/demo/tanstackMutation'
    | '/demo/'
    | '/account/preferences'
    | '/account/profile'
    | '/account/referral'
    | '/account/support'
    | '/customer/$id'
    | '/order/$id'
    | '/product/$id'
    | '/product/create'
    | '/store/staff'
    | '/account/'
    | '/customer'
    | '/order'
    | '/product'
    | '/store/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/demo/client'
    | '/demo/directMutation'
    | '/demo/ssr'
    | '/demo/tanstackMutation'
    | '/'
    | '/demo'
    | '/account/preferences'
    | '/account/profile'
    | '/account/referral'
    | '/account/support'
    | '/customer/$id'
    | '/order/$id'
    | '/product/$id'
    | '/product/create'
    | '/store/staff'
    | '/account'
    | '/customer'
    | '/order'
    | '/product'
    | '/store'
  id:
    | '__root__'
    | '/(loggedIn)'
    | '/demo'
    | '/(loggedIn)/account'
    | '/(loggedIn)/store'
    | '/demo/client'
    | '/demo/directMutation'
    | '/demo/ssr'
    | '/demo/tanstackMutation'
    | '/(loggedIn)/'
    | '/demo/'
    | '/(loggedIn)/account/preferences'
    | '/(loggedIn)/account/profile'
    | '/(loggedIn)/account/referral'
    | '/(loggedIn)/account/support'
    | '/(loggedIn)/customer/$id'
    | '/(loggedIn)/order/$id'
    | '/(loggedIn)/product/$id'
    | '/(loggedIn)/product/create'
    | '/(loggedIn)/store/staff'
    | '/(loggedIn)/account/'
    | '/(loggedIn)/customer/'
    | '/(loggedIn)/order/'
    | '/(loggedIn)/product/'
    | '/(loggedIn)/store/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  loggedInRouteRoute: typeof loggedInRouteRouteWithChildren
  DemoRouteRoute: typeof DemoRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  loggedInRouteRoute: loggedInRouteRouteWithChildren,
  DemoRouteRoute: DemoRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(loggedIn)",
        "/demo"
      ]
    },
    "/(loggedIn)": {
      "filePath": "(loggedIn)/route.tsx",
      "children": [
        "/(loggedIn)/account",
        "/(loggedIn)/store",
        "/(loggedIn)/",
        "/(loggedIn)/customer/$id",
        "/(loggedIn)/order/$id",
        "/(loggedIn)/product/$id",
        "/(loggedIn)/product/create",
        "/(loggedIn)/customer/",
        "/(loggedIn)/order/",
        "/(loggedIn)/product/"
      ]
    },
    "/demo": {
      "filePath": "demo/route.tsx",
      "children": [
        "/demo/client",
        "/demo/directMutation",
        "/demo/ssr",
        "/demo/tanstackMutation",
        "/demo/"
      ]
    },
    "/(loggedIn)/account": {
      "filePath": "(loggedIn)/account/route.tsx",
      "parent": "/(loggedIn)",
      "children": [
        "/(loggedIn)/account/preferences",
        "/(loggedIn)/account/profile",
        "/(loggedIn)/account/referral",
        "/(loggedIn)/account/support",
        "/(loggedIn)/account/"
      ]
    },
    "/(loggedIn)/store": {
      "filePath": "(loggedIn)/store/route.tsx",
      "parent": "/(loggedIn)",
      "children": [
        "/(loggedIn)/store/staff",
        "/(loggedIn)/store/"
      ]
    },
    "/demo/client": {
      "filePath": "demo/client.tsx",
      "parent": "/demo"
    },
    "/demo/directMutation": {
      "filePath": "demo/directMutation.tsx",
      "parent": "/demo"
    },
    "/demo/ssr": {
      "filePath": "demo/ssr.tsx",
      "parent": "/demo"
    },
    "/demo/tanstackMutation": {
      "filePath": "demo/tanstackMutation.tsx",
      "parent": "/demo"
    },
    "/(loggedIn)/": {
      "filePath": "(loggedIn)/index.tsx",
      "parent": "/(loggedIn)"
    },
    "/demo/": {
      "filePath": "demo/index.tsx",
      "parent": "/demo"
    },
    "/(loggedIn)/account/preferences": {
      "filePath": "(loggedIn)/account/preferences.tsx",
      "parent": "/(loggedIn)/account"
    },
    "/(loggedIn)/account/profile": {
      "filePath": "(loggedIn)/account/profile.tsx",
      "parent": "/(loggedIn)/account"
    },
    "/(loggedIn)/account/referral": {
      "filePath": "(loggedIn)/account/referral.tsx",
      "parent": "/(loggedIn)/account"
    },
    "/(loggedIn)/account/support": {
      "filePath": "(loggedIn)/account/support.tsx",
      "parent": "/(loggedIn)/account"
    },
    "/(loggedIn)/customer/$id": {
      "filePath": "(loggedIn)/customer/$id.tsx",
      "parent": "/(loggedIn)"
    },
    "/(loggedIn)/order/$id": {
      "filePath": "(loggedIn)/order/$id.tsx",
      "parent": "/(loggedIn)"
    },
    "/(loggedIn)/product/$id": {
      "filePath": "(loggedIn)/product/$id.tsx",
      "parent": "/(loggedIn)"
    },
    "/(loggedIn)/product/create": {
      "filePath": "(loggedIn)/product/create.tsx",
      "parent": "/(loggedIn)"
    },
    "/(loggedIn)/store/staff": {
      "filePath": "(loggedIn)/store/staff.tsx",
      "parent": "/(loggedIn)/store"
    },
    "/(loggedIn)/account/": {
      "filePath": "(loggedIn)/account/index.tsx",
      "parent": "/(loggedIn)/account"
    },
    "/(loggedIn)/customer/": {
      "filePath": "(loggedIn)/customer/index.tsx",
      "parent": "/(loggedIn)"
    },
    "/(loggedIn)/order/": {
      "filePath": "(loggedIn)/order/index.tsx",
      "parent": "/(loggedIn)"
    },
    "/(loggedIn)/product/": {
      "filePath": "(loggedIn)/product/index.tsx",
      "parent": "/(loggedIn)"
    },
    "/(loggedIn)/store/": {
      "filePath": "(loggedIn)/store/index.tsx",
      "parent": "/(loggedIn)/store"
    }
  }
}
ROUTE_MANIFEST_END */

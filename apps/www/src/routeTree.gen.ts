/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShopRouteImport } from './routes/shop/route'
import { Route as CheckoutRouteImport } from './routes/checkout/route'
import { Route as IndexImport } from './routes/index'
import { Route as ShopIndexImport } from './routes/shop/index'
import { Route as CartIndexImport } from './routes/cart/index'
import { Route as AccountIndexImport } from './routes/account/index'
import { Route as AccountProfileImport } from './routes/account/profile'
import { Route as authLogoutImport } from './routes/(auth)/logout'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as ShopIdIndexImport } from './routes/shop/$id/index'
import { Route as AccountOrdersIndexImport } from './routes/account/orders/index'
import { Route as AccountAddressesIndexImport } from './routes/account/addresses/index'
import { Route as AccountOrdersOrderIdImport } from './routes/account/orders/$orderId'
import { Route as AccountAddressesNewImport } from './routes/account/addresses/new'
import { Route as AccountAddressesDeliveryAddressImport } from './routes/account/addresses/deliveryAddress'
import { Route as ShopIdProductsIndexImport } from './routes/shop/$id/products/index'
import { Route as ShopIdProductsProductIdImport } from './routes/shop/$id/products/$productId'
import { Route as ShopIdProductsCategoryCategoryIdImport } from './routes/shop/$id/products/category/$categoryId'

// Create/Update Routes

const ShopRouteRoute = ShopRouteImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutRouteRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShopIndexRoute = ShopIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ShopRouteRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const AccountIndexRoute = AccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any)

const AccountProfileRoute = AccountProfileImport.update({
  id: '/account/profile',
  path: '/account/profile',
  getParentRoute: () => rootRoute,
} as any)

const authLogoutRoute = authLogoutImport.update({
  id: '/(auth)/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ShopIdIndexRoute = ShopIdIndexImport.update({
  id: '/$id/',
  path: '/$id/',
  getParentRoute: () => ShopRouteRoute,
} as any)

const AccountOrdersIndexRoute = AccountOrdersIndexImport.update({
  id: '/account/orders/',
  path: '/account/orders/',
  getParentRoute: () => rootRoute,
} as any)

const AccountAddressesIndexRoute = AccountAddressesIndexImport.update({
  id: '/account/addresses/',
  path: '/account/addresses/',
  getParentRoute: () => rootRoute,
} as any)

const AccountOrdersOrderIdRoute = AccountOrdersOrderIdImport.update({
  id: '/account/orders/$orderId',
  path: '/account/orders/$orderId',
  getParentRoute: () => rootRoute,
} as any)

const AccountAddressesNewRoute = AccountAddressesNewImport.update({
  id: '/account/addresses/new',
  path: '/account/addresses/new',
  getParentRoute: () => rootRoute,
} as any)

const AccountAddressesDeliveryAddressRoute =
  AccountAddressesDeliveryAddressImport.update({
    id: '/account/addresses/deliveryAddress',
    path: '/account/addresses/deliveryAddress',
    getParentRoute: () => rootRoute,
  } as any)

const ShopIdProductsIndexRoute = ShopIdProductsIndexImport.update({
  id: '/$id/products/',
  path: '/$id/products/',
  getParentRoute: () => ShopRouteRoute,
} as any)

const ShopIdProductsProductIdRoute = ShopIdProductsProductIdImport.update({
  id: '/$id/products/$productId',
  path: '/$id/products/$productId',
  getParentRoute: () => ShopRouteRoute,
} as any)

const ShopIdProductsCategoryCategoryIdRoute =
  ShopIdProductsCategoryCategoryIdImport.update({
    id: '/$id/products/category/$categoryId',
    path: '/$id/products/category/$categoryId',
    getParentRoute: () => ShopRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/logout': {
      id: '/(auth)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutImport
      parentRoute: typeof rootRoute
    }
    '/account/profile': {
      id: '/account/profile'
      path: '/account/profile'
      fullPath: '/account/profile'
      preLoaderRoute: typeof AccountProfileImport
      parentRoute: typeof rootRoute
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/shop/': {
      id: '/shop/'
      path: '/'
      fullPath: '/shop/'
      preLoaderRoute: typeof ShopIndexImport
      parentRoute: typeof ShopRouteImport
    }
    '/account/addresses/deliveryAddress': {
      id: '/account/addresses/deliveryAddress'
      path: '/account/addresses/deliveryAddress'
      fullPath: '/account/addresses/deliveryAddress'
      preLoaderRoute: typeof AccountAddressesDeliveryAddressImport
      parentRoute: typeof rootRoute
    }
    '/account/addresses/new': {
      id: '/account/addresses/new'
      path: '/account/addresses/new'
      fullPath: '/account/addresses/new'
      preLoaderRoute: typeof AccountAddressesNewImport
      parentRoute: typeof rootRoute
    }
    '/account/orders/$orderId': {
      id: '/account/orders/$orderId'
      path: '/account/orders/$orderId'
      fullPath: '/account/orders/$orderId'
      preLoaderRoute: typeof AccountOrdersOrderIdImport
      parentRoute: typeof rootRoute
    }
    '/account/addresses/': {
      id: '/account/addresses/'
      path: '/account/addresses'
      fullPath: '/account/addresses'
      preLoaderRoute: typeof AccountAddressesIndexImport
      parentRoute: typeof rootRoute
    }
    '/account/orders/': {
      id: '/account/orders/'
      path: '/account/orders'
      fullPath: '/account/orders'
      preLoaderRoute: typeof AccountOrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/shop/$id/': {
      id: '/shop/$id/'
      path: '/$id'
      fullPath: '/shop/$id'
      preLoaderRoute: typeof ShopIdIndexImport
      parentRoute: typeof ShopRouteImport
    }
    '/shop/$id/products/$productId': {
      id: '/shop/$id/products/$productId'
      path: '/$id/products/$productId'
      fullPath: '/shop/$id/products/$productId'
      preLoaderRoute: typeof ShopIdProductsProductIdImport
      parentRoute: typeof ShopRouteImport
    }
    '/shop/$id/products/': {
      id: '/shop/$id/products/'
      path: '/$id/products'
      fullPath: '/shop/$id/products'
      preLoaderRoute: typeof ShopIdProductsIndexImport
      parentRoute: typeof ShopRouteImport
    }
    '/shop/$id/products/category/$categoryId': {
      id: '/shop/$id/products/category/$categoryId'
      path: '/$id/products/category/$categoryId'
      fullPath: '/shop/$id/products/category/$categoryId'
      preLoaderRoute: typeof ShopIdProductsCategoryCategoryIdImport
      parentRoute: typeof ShopRouteImport
    }
  }
}

// Create and export the route tree

interface ShopRouteRouteChildren {
  ShopIndexRoute: typeof ShopIndexRoute
  ShopIdIndexRoute: typeof ShopIdIndexRoute
  ShopIdProductsProductIdRoute: typeof ShopIdProductsProductIdRoute
  ShopIdProductsIndexRoute: typeof ShopIdProductsIndexRoute
  ShopIdProductsCategoryCategoryIdRoute: typeof ShopIdProductsCategoryCategoryIdRoute
}

const ShopRouteRouteChildren: ShopRouteRouteChildren = {
  ShopIndexRoute: ShopIndexRoute,
  ShopIdIndexRoute: ShopIdIndexRoute,
  ShopIdProductsProductIdRoute: ShopIdProductsProductIdRoute,
  ShopIdProductsIndexRoute: ShopIdProductsIndexRoute,
  ShopIdProductsCategoryCategoryIdRoute: ShopIdProductsCategoryCategoryIdRoute,
}

const ShopRouteRouteWithChildren = ShopRouteRoute._addFileChildren(
  ShopRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRouteRoute
  '/shop': typeof ShopRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/account/profile': typeof AccountProfileRoute
  '/account': typeof AccountIndexRoute
  '/cart': typeof CartIndexRoute
  '/shop/': typeof ShopIndexRoute
  '/account/addresses/deliveryAddress': typeof AccountAddressesDeliveryAddressRoute
  '/account/addresses/new': typeof AccountAddressesNewRoute
  '/account/orders/$orderId': typeof AccountOrdersOrderIdRoute
  '/account/addresses': typeof AccountAddressesIndexRoute
  '/account/orders': typeof AccountOrdersIndexRoute
  '/shop/$id': typeof ShopIdIndexRoute
  '/shop/$id/products/$productId': typeof ShopIdProductsProductIdRoute
  '/shop/$id/products': typeof ShopIdProductsIndexRoute
  '/shop/$id/products/category/$categoryId': typeof ShopIdProductsCategoryCategoryIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRouteRoute
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/account/profile': typeof AccountProfileRoute
  '/account': typeof AccountIndexRoute
  '/cart': typeof CartIndexRoute
  '/shop': typeof ShopIndexRoute
  '/account/addresses/deliveryAddress': typeof AccountAddressesDeliveryAddressRoute
  '/account/addresses/new': typeof AccountAddressesNewRoute
  '/account/orders/$orderId': typeof AccountOrdersOrderIdRoute
  '/account/addresses': typeof AccountAddressesIndexRoute
  '/account/orders': typeof AccountOrdersIndexRoute
  '/shop/$id': typeof ShopIdIndexRoute
  '/shop/$id/products/$productId': typeof ShopIdProductsProductIdRoute
  '/shop/$id/products': typeof ShopIdProductsIndexRoute
  '/shop/$id/products/category/$categoryId': typeof ShopIdProductsCategoryCategoryIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRouteRoute
  '/shop': typeof ShopRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/logout': typeof authLogoutRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/': typeof AccountIndexRoute
  '/cart/': typeof CartIndexRoute
  '/shop/': typeof ShopIndexRoute
  '/account/addresses/deliveryAddress': typeof AccountAddressesDeliveryAddressRoute
  '/account/addresses/new': typeof AccountAddressesNewRoute
  '/account/orders/$orderId': typeof AccountOrdersOrderIdRoute
  '/account/addresses/': typeof AccountAddressesIndexRoute
  '/account/orders/': typeof AccountOrdersIndexRoute
  '/shop/$id/': typeof ShopIdIndexRoute
  '/shop/$id/products/$productId': typeof ShopIdProductsProductIdRoute
  '/shop/$id/products/': typeof ShopIdProductsIndexRoute
  '/shop/$id/products/category/$categoryId': typeof ShopIdProductsCategoryCategoryIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/checkout'
    | '/shop'
    | '/login'
    | '/logout'
    | '/account/profile'
    | '/account'
    | '/cart'
    | '/shop/'
    | '/account/addresses/deliveryAddress'
    | '/account/addresses/new'
    | '/account/orders/$orderId'
    | '/account/addresses'
    | '/account/orders'
    | '/shop/$id'
    | '/shop/$id/products/$productId'
    | '/shop/$id/products'
    | '/shop/$id/products/category/$categoryId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/checkout'
    | '/login'
    | '/logout'
    | '/account/profile'
    | '/account'
    | '/cart'
    | '/shop'
    | '/account/addresses/deliveryAddress'
    | '/account/addresses/new'
    | '/account/orders/$orderId'
    | '/account/addresses'
    | '/account/orders'
    | '/shop/$id'
    | '/shop/$id/products/$productId'
    | '/shop/$id/products'
    | '/shop/$id/products/category/$categoryId'
  id:
    | '__root__'
    | '/'
    | '/checkout'
    | '/shop'
    | '/(auth)/login'
    | '/(auth)/logout'
    | '/account/profile'
    | '/account/'
    | '/cart/'
    | '/shop/'
    | '/account/addresses/deliveryAddress'
    | '/account/addresses/new'
    | '/account/orders/$orderId'
    | '/account/addresses/'
    | '/account/orders/'
    | '/shop/$id/'
    | '/shop/$id/products/$productId'
    | '/shop/$id/products/'
    | '/shop/$id/products/category/$categoryId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CheckoutRouteRoute: typeof CheckoutRouteRoute
  ShopRouteRoute: typeof ShopRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authLogoutRoute: typeof authLogoutRoute
  AccountProfileRoute: typeof AccountProfileRoute
  AccountIndexRoute: typeof AccountIndexRoute
  CartIndexRoute: typeof CartIndexRoute
  AccountAddressesDeliveryAddressRoute: typeof AccountAddressesDeliveryAddressRoute
  AccountAddressesNewRoute: typeof AccountAddressesNewRoute
  AccountOrdersOrderIdRoute: typeof AccountOrdersOrderIdRoute
  AccountAddressesIndexRoute: typeof AccountAddressesIndexRoute
  AccountOrdersIndexRoute: typeof AccountOrdersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CheckoutRouteRoute: CheckoutRouteRoute,
  ShopRouteRoute: ShopRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authLogoutRoute: authLogoutRoute,
  AccountProfileRoute: AccountProfileRoute,
  AccountIndexRoute: AccountIndexRoute,
  CartIndexRoute: CartIndexRoute,
  AccountAddressesDeliveryAddressRoute: AccountAddressesDeliveryAddressRoute,
  AccountAddressesNewRoute: AccountAddressesNewRoute,
  AccountOrdersOrderIdRoute: AccountOrdersOrderIdRoute,
  AccountAddressesIndexRoute: AccountAddressesIndexRoute,
  AccountOrdersIndexRoute: AccountOrdersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/checkout",
        "/shop",
        "/(auth)/login",
        "/(auth)/logout",
        "/account/profile",
        "/account/",
        "/cart/",
        "/account/addresses/deliveryAddress",
        "/account/addresses/new",
        "/account/orders/$orderId",
        "/account/addresses/",
        "/account/orders/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/checkout": {
      "filePath": "checkout/route.tsx"
    },
    "/shop": {
      "filePath": "shop/route.tsx",
      "children": [
        "/shop/",
        "/shop/$id/",
        "/shop/$id/products/$productId",
        "/shop/$id/products/",
        "/shop/$id/products/category/$categoryId"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/logout": {
      "filePath": "(auth)/logout.tsx"
    },
    "/account/profile": {
      "filePath": "account/profile.tsx"
    },
    "/account/": {
      "filePath": "account/index.tsx"
    },
    "/cart/": {
      "filePath": "cart/index.tsx"
    },
    "/shop/": {
      "filePath": "shop/index.tsx",
      "parent": "/shop"
    },
    "/account/addresses/deliveryAddress": {
      "filePath": "account/addresses/deliveryAddress.tsx"
    },
    "/account/addresses/new": {
      "filePath": "account/addresses/new.tsx"
    },
    "/account/orders/$orderId": {
      "filePath": "account/orders/$orderId.tsx"
    },
    "/account/addresses/": {
      "filePath": "account/addresses/index.tsx"
    },
    "/account/orders/": {
      "filePath": "account/orders/index.tsx"
    },
    "/shop/$id/": {
      "filePath": "shop/$id/index.tsx",
      "parent": "/shop"
    },
    "/shop/$id/products/$productId": {
      "filePath": "shop/$id/products/$productId.tsx",
      "parent": "/shop"
    },
    "/shop/$id/products/": {
      "filePath": "shop/$id/products/index.tsx",
      "parent": "/shop"
    },
    "/shop/$id/products/category/$categoryId": {
      "filePath": "shop/$id/products/category/$categoryId.tsx",
      "parent": "/shop"
    }
  }
}
ROUTE_MANIFEST_END */
